// <auto-generated />
using APIWarehouse.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIWarehouse.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20191116210522_ajusteverificacoes")]
    partial class ajusteverificacoes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModelsAndExtensions.Models.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("tb_brand");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "",
                            Name = ""
                        });
                });

            modelBuilder.Entity("ModelsAndExtensions.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long>("BrandId");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<int>("Quantity");

                    b.Property<string>("Unit");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("tb_product");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            BrandId = 1L,
                            Name = "",
                            Price = 0.0,
                            Quantity = 0,
                            Unit = ""
                        });
                });

            modelBuilder.Entity("ModelsAndExtensions.Models.Product", b =>
                {
                    b.HasOne("ModelsAndExtensions.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
